{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"compile-proc",
				"compile-proc-application"
			],
			[
				"body",
				"bodyAndSubject"
			],
			[
				"regEx",
				"regExesIdx"
			],
			[
				"co",
				"computed"
			],
			[
				"bacg",
				"background-color"
			],
			[
				"font",
				"font-family"
			],
			[
				"table",
				"table-cell"
			],
			[
				"string",
				"string_to_eval"
			],
			[
				"built",
				"builtin"
			],
			[
				"macr",
				"macro_expand"
			],
			[
				"builtin",
				"builtinproc"
			],
			[
				"macro",
				"macro_args"
			],
			[
				"code",
				"codeobj"
			],
			[
				"get",
				"get_exp"
			],
			[
				"read",
				"read_key"
			],
			[
				"eva",
				"evaluated_values"
			],
			[
				"Sy",
				"SyntaxError"
			],
			[
				"_un",
				"_unquotesplicing	(global, instance)"
			],
			[
				"unqu",
				"unquote-splicing"
			],
			[
				"str",
				"read_string"
			],
			[
				"th",
				"throwaway"
			],
			[
				"is",
				"isCallable"
			],
			[
				"Native",
				"NativeProcedure	(global, class)"
			],
			[
				"s",
				"substract	(global, class)"
			],
			[
				"logical",
				"logical_and	(global, class)"
			],
			[
				"logic",
				"logical_or	(global, class)"
			],
			[
				"Nativ",
				"NativeProcedure	(global, class)"
			],
			[
				"Nati",
				"NativeProcedure	(global, class)"
			],
			[
				"lo",
				"loispy"
			],
			[
				"NOt",
				"NotImplementedError	(builtin, class)"
			],
			[
				"apply",
				"apply_proc(env)	(local, function)"
			],
			[
				"analyze",
				"analyze_sequence(seq)	(global, function)"
			],
			[
				"set",
				"set_var(env)	(local, function)"
			],
			[
				"Sym",
				"Symbol"
			],
			[
				"Key",
				"KeyboardInterrupt	(builtin, class)"
			],
			[
				"analy",
				"analyze_sequence(seq)	(global, function)"
			],
			[
				"analyz",
				"analyze_if(exp)	(global, function)"
			],
			[
				"nOt",
				"NotImplementedError"
			],
			[
				"Not",
				"NotImplementedError	(builtin, class)"
			],
			[
				"token",
				"tokenize(str)	(global, function)"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"toki",
				"token_list"
			],
			[
				"Pair",
				"PairElement"
			],
			[
				"Pai",
				"PairElement"
			],
			[
				"Pa",
				"PairElement"
			],
			[
				"pair",
				"pair_element"
			],
			[
				"bindin",
				"binding_env"
			],
			[
				"proc",
				"procedure_body"
			],
			[
				"proced",
				"procedure_parameters"
			],
			[
				"ta",
				"is_tagged_list"
			],
			[
				"is_c",
				"is_compound_procedure"
			],
			[
				"pro",
				"procedure"
			],
			[
				"g",
				"global_environment"
			],
			[
				"page",
				"PageExpr"
			],
			[
				"comment",
				"commentsLength"
			],
			[
				"_",
				"_phantom"
			],
			[
				"proto",
				"prototype"
			],
			[
				"if",
				"if	if"
			],
			[
				"or",
				"orderHandler"
			],
			[
				"fu",
				"fun	Function"
			],
			[
				"order",
				"OrderHandler"
			],
			[
				"prod",
				"productName"
			],
			[
				"produ",
				"productName"
			],
			[
				"pr",
				"product_price"
			],
			[
				"result",
				"result_price"
			],
			[
				"search",
				"search_form"
			],
			[
				"step",
				"stepIndex"
			],
			[
				"hand",
				"handle_message"
			],
			[
				"conn",
				"connection"
			],
			[
				"tag",
				"tag_collection"
			],
			[
				"v",
				"VocabProvider"
			],
			[
				"article",
				"article_collection"
			],
			[
				"sentence",
				"sentence_count"
			],
			[
				"sente",
				"sentence_count"
			],
			[
				"word",
				"wordcount"
			],
			[
				"tokenize_",
				"tokenize_text"
			],
			[
				"toke",
				"tokenize_logger"
			],
			[
				"levens",
				"levenshtein_logger"
			],
			[
				"purr",
				"purr_main_logger"
			],
			[
				"levn",
				"levenshtein_match"
			],
			[
				"levensh",
				"levenshtein_match"
			],
			[
				"leven",
				"levenshtein_logger"
			],
			[
				"background",
				"background-color"
			],
			[
				"list-st",
				"list-style-type"
			],
			[
				"list",
				"list-style-type"
			],
			[
				"con",
				"confFile"
			],
			[
				"__",
				"__main___"
			],
			[
				"busines",
				"business_element"
			],
			[
				"declare",
				"declare	order"
			],
			[
				"wordListt",
				"wordListThree"
			],
			[
				"wor",
				"wordListTwo"
			],
			[
				"wordL",
				"wordListOne"
			],
			[
				"wordli",
				"wordListThree"
			],
			[
				"wordl",
				"wordListTwo"
			],
			[
				"worl",
				"wordListTwo"
			],
			[
				"rand",
				"random"
			],
			[
				"wordList",
				"wordListTwo"
			],
			[
				"beer",
				"beerNum"
			],
			[
				"las",
				"laser_weapon_armory"
			],
			[
				"central",
				"central_corridor"
			],
			[
				"gold",
				"gold_room"
			],
			[
				"sphinx",
				"sphinx_moved"
			],
			[
				"player",
				"players_name"
			],
			[
				"bear",
				"bear_room"
			],
			[
				"start",
				"start_point"
			],
			[
				"KWT",
				"KWTextConditionElement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "LICENSE.txt",
			"settings":
			{
				"buffer_size": 1079,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3170,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/loispy/interpreter/main.py",
			"settings":
			{
				"buffer_size": 2031,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import operator as op\nimport sys\nfrom symbol import Symbol, Sym\nfrom utils import to_string\nfrom parsing import parse\n\n\n# ------------------------------------------------------\n# GLOBAL builtin DICT: BUILT-IN PROCEDURES AND CONSTANTS\n# ------------------------------------------------------\n\n\nbuiltin = {\n    \"#t\": True,\n    \"#f\": False,\n    \"#n\": None\n}\n\n\n\n# ---------------\n# UTILITY CLASSES\n# ---------------\n\n\nclass BuiltInProcedure(object):\n\n    def __init__(self, func):\n        self.func = func\n\n    def __str__(self):\n        return \"<Built-In Procedure %s>\" % self.__class__.__name__\n\n    __repr__ = __str__\n\n    def __call__(self, *args):\n        return self.func(*args)\n\n\nclass builtinproc(object):\n    \"\"\"\n    This class is meant to be instantiated as a decorator.\n    \"\"\"\n    def __init__(self, *aliases):\n        self.aliases = aliases\n\n    def __call__(self, func):\n        procname = self.aliases[0] if self.aliases else func.__name__\n        proc = type(procname, (BuiltInProcedure,), {})(func)\n        builtin[procname] = proc\n        for a in self.aliases[1:]:\n            builtin[a] = proc\n        return proc\n\n\n\n#-------------------------------\n# BUILT-IN PROCEDURE DEFINITIONS\n#-------------------------------\n\n\nfor p in len, min, max, range, map, reduce, filter, sys.exit:\n    builtinproc()(p)\n\n\nbuiltinproc(\"proc?\")(op.isCallable)\n\n@builtinproc()\ndef error(msg):\n    raise Exception(msg)\n\n\n@builtinproc(\"*\")\ndef multiply(*args):\n    if not len(args) > 1:\n        raise Exception(\"Expected at least 2 arguments, got %d\" % len(args))\n    else:\n        return reduce(op.mul, args)\n\n\n@builtinproc(\"eq?\", \"=\")\ndef equals(*args):\n    if not len(args) == 2:\n        raise Exception(\"Expected 2 arguments, got %d\" % len(args))\n    else:\n        return op.eq(*args)\n\n@builtinproc(\"-\")\ndef substract(*args):\n    if not len(args) > 1:\n        raise Exception(\"Expected at least 2 arguments, got %d\" % len(args))\n    else:\n        return reduce(op.sub, args)\n\n@builtinproc(\"neq?\", \"!=\")\ndef not_equals(*args):\n    assert len(args) == 2, \"Expected 2 arguments, got %d\" % len(args)\n    return op.__ne__(*args)\n\n@builtinproc(\"+\")\ndef add(*args):\n    assert len(args) > 1, \"Expected at least 2 arguments, got %d\" % len(args)\n    return reduce(op.add, args)\n\n@builtinproc(\"/\")\ndef divide(*args):\n    assert len(args) > 1, \"Expected at least 2 arguments, got %d\" % len(args)\n    return reduce(op.div, args)\n\n@builtinproc(\"not\")\ndef logical_not(pred):\n    return not pred\n\n@builtinproc(\"and\")\ndef logical_and(*args):\n    if len(args) == 1 and type(args[0]) is list:\n        return all(map(lambda a: a is True, args[0]))\n    elif len(args) > 1:\n        return all(map(lambda a: a is True, args))\n    else:\n        raise ValueError(\"Wrong number of arguments for and (%d)\" % len(args))\n\n@builtinproc(\"or\")\ndef logical_or(*args):\n    assert len(args) > 1, \"Expected at least 2 arguments, got %d\" % len(args)\n    return any(args)\n\n@builtinproc(\"true?\")\ndef is_true(x):\n    return x == True\n\n@builtinproc(\"false?\")\ndef is_false(x):\n    return not x\n\n@builtinproc(\"empty?\")\ndef is_empty(x):\n    return not len(x)\n\n@builtinproc(\"none?\")\ndef null(x):\n    return x is None\n\n@builtinproc(\"even?\")\ndef even(x):\n    return not x % 2\n\n@builtinproc(\"odd?\")\ndef odd(x):\n    return bool(x % 2)\n\n@builtinproc(\"print\")\ndef print_(*data):\n    print \" \".join([to_string(x) for x in data])\n\n@builtinproc(\"make-symbol\")\ndef make_symbol(_str):\n    return Sym(_str)\n\n\n# ----------------------\n# Manipulating iterables\n# ----------------------\n\n\n@builtinproc()\ndef nth(lst, idx):\n    return lst[idx]\n\n@builtinproc()\ndef last(lst):\n    return lst[-1]\n\n@builtinproc()\ndef first(lst):\n    return lst[0]\n\n@builtinproc(\"take-from\")\ndef take_from(lst, idx):\n    return lst[idx:]\n\n@builtinproc(\"take-until\")\ndef take_until(lst, idx):\n    return lst[:idx]\n\n@builtinproc(\"all-but-last\")\ndef all_but_last(lst):\n    return lst[:len(lst) - 1]\n\n@builtinproc(\"all-but-first\")\ndef all_but_first(lst):\n    return lst[1:]\n\n@builtinproc(\"list\")\ndef list_(*args):\n    return list(args) if args else []\n\n@builtinproc(\"contains?\")\ndef contains(x, y):\n    return y in x\n\n\n# ------------------\n# MANIPULATING DICTS\n# ------------------\n\n@builtinproc()\ndef get(dct, key):\n    if type(dct) is not dict:\n        raise TypeError(\"%s... is not a dict\" % to_string(dct)[:15])\n    return dct[key]\n\n@builtinproc(\"set-val\")\ndef set_val(dct, key, val):\n    if type(dct) is not dict:\n        raise TypeError(\"%s... is not a dict\" % to_string(dct)[:15])\n    dct[key] = val\n\n@builtinproc()\ndef keys(dct):\n    if type(dct) is not dict:\n        raise TypeError(\"%s... is not a dict\" % to_string(dct)[:15])\n    return dct.keys()\n\n@builtinproc()\ndef values(dct):\n    if type(dct) is not dict:\n        raise TypeError(\"%s... is not a dict\" % to_string(dct)[:15])\n    return dct.values()\n\n@builtinproc()\ndef items(dct):\n    if type(dct) is not dict:\n        raise TypeError(\"%s... is not a dict\" % to_string(dct)[:15])\n    return dct.items()\n\n\n\n# ------------------------------------\n# TYPE PREDICATES - mutually exclusive\n# ------------------------------------\n\n\n@builtinproc(\"type\")\ndef type_(arg):\n    return type(arg)\n\n@builtinproc(\"list?\")\ndef is_list(arg):\n    return type(arg) is list\n\n@builtinproc(\"dict?\")\ndef is_dict(arg):\n    return type(arg) is dict\n\n@builtinproc(\"symbol?\")\ndef is_symbol(arg):\n    return type(arg) is Symbol\n\n@builtinproc(\"int?\")\ndef is_int(arg):\n    return type(arg) is int\n\n@builtinproc(\"float?\")\ndef is_float(arg):\n    return type(arg) is float\n\n@builtinproc(\"string?\")\ndef is_str(arg):\n    return type(arg) is str\n\n@builtinproc(\"boolean?\")\ndef is_boolean(arg):\n    return type(arg) is bool\n\n@builtinproc(\"none?\")\ndef is_none(arg):\n    return type(arg) is type(None)\n\n@builtinproc(\"parse\")\ndef _parse(_str):\n    return [node.get_exp() for node in parse(_str)]\n\n@builtinproc()\ndef replace(_str, pattern, value):\n    return _str.replace(pattern, value)\n\n@builtinproc()\ndef split(_str, pattern):\n    return _str.split(pattern)\n\n@builtinproc()\ndef join(lst, _str):\n    return _str.join()",
			"file": "src/loispy/interpreter/builtin.py",
			"file_size": 6057,
			"file_write_time": 1378662580000000,
			"settings":
			{
				"buffer_size": 6054,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/loispy/interpreter/analysis.py",
			"settings":
			{
				"buffer_size": 12831,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "(=> run-test (test)\n  (let* ((expression (first test))\n        (result (eval expression))\n        (expected-result (last test)))\n    (print expression \" >>> \" result)\n    (if (!= result expected-result)\n        (print \"FAIL - EXPECTED \" expected-result)\n        (print \"OK\"))))\n\n($ tests `(\n  (\"(parse \\\"($ x 2)\\\")\" `(($ x 2)))\n))\n\n(map run-test tests)",
			"file": "src/loispy/interpreter/tests/test.loisp",
			"file_size": 348,
			"file_write_time": 1378709034000000,
			"settings":
			{
				"buffer_size": 352,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/loispy/interpreter/stdlib/compile.loisp",
			"settings":
			{
				"buffer_size": 1817,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"syntax lisp",
				"Set Syntax: Lisp"
			],
			[
				"syntax cof",
				"Set Syntax: CoffeeScript"
			],
			[
				"syntax coffeee",
				"Set Syntax: CoffeeScript (Literate)"
			],
			[
				"syntax pyth",
				"Set Syntax: Python"
			],
			[
				"bas",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"syntax plain",
				"Set Syntax: Plain Text"
			],
			[
				"syntax javascript",
				"Set Syntax: JavaScript"
			],
			[
				"syntax js",
				"Set Syntax: JavaScript"
			],
			[
				"syn cof",
				"Set Syntax: CoffeeScript"
			],
			[
				"syntax C",
				"Set Syntax: C"
			],
			[
				"syntax coffee",
				"Set Syntax: CoffeeScript"
			],
			[
				"syntax coffe",
				"Set Syntax: CoffeeScript"
			],
			[
				"syntax cofe",
				"Set Syntax: CoffeeScript"
			],
			[
				"syntax coff",
				"Set Syntax: CoffeeScript"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"Code Folding: Unfold All"
			],
			[
				"fold",
				"Code Folding: Unfold All"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/loic/repositories/loispy/src/loispy/interpreter/analysis.py",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/utils.py",
		"/Users/loic/repositories/loispy/src/loispy/webapp/app.py",
		"/Users/loic/repositories/loispy/src/loispy/webapp/templates/index.html",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/error.py",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/symbol.py",
		"/Users/loic/repositories/loispy/src/loispy/webapp/static/js/app.js",
		"/Users/loic/repositories/loispy/src/loispy/webapp/static/js/app.coffee",
		"/Users/loic/repositories/loispy/src/loispy/webapp/static/css/app.css",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/codeobject.py",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/builtin.py",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/main.py",
		"/Users/loic/repositories/loispy/bin/loispy",
		"/Users/loic/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/loic/repositories/loispy/src/loispy/webapp/static/js/jquery-1.10.2.min.js",
		"/Users/loic/repositories/loispy/src/loispy/webapp/main.py",
		"/Users/loic/repositories/loispy/src/loispy/__init__.py",
		"/Users/loic/repositories/loispy/src/loispy/webapp/__init__.py",
		"/Users/loic/repositories/loispy/src/loispy/interpreter/__init__.py",
		"/Users/loic/repositories/loispy/src/parsing.py",
		"/Users/loic/repositories/loispy/src/utils.py",
		"/Users/loic/repositories/loispy/README.md",
		"/Users/loic/repositories/loispy/src/symbol.py",
		"/Users/loic/repositories/loispy/src/builtin.py",
		"/Users/loic/repositories/loispy/src/codeobject.py",
		"/Users/loic/repositories/loispy/src/error.py",
		"/Users/loic/repositories/loispy/src/procedure.py",
		"/Users/loic/repositories/loispy/src/analysis.py",
		"/Users/loic/repositories/loispy/src/environment.py",
		"/Users/loic/repositories/loispy/src/stdlib/builtinmacros.loisp",
		"/Users/loic/repositories/loispy/src/main.py",
		"/Users/loic/repositories/loispy/src/test/test_parsing.py",
		"/Users/loic/repositories/loispy/src/native.py",
		"/Users/loic/repositories/loispy/loispy.sublime-project",
		"/Users/loic/repositories/loispy/src/new-parsing.py",
		"/home/loic/repositories/loispy/loispy-scripts/funcs.loisp",
		"/home/loic/repositories/loispy/src/utils.py",
		"/home/loic/repositories/loispy/src/native.py",
		"/home/loic/repositories/sicp/interpreter.scm",
		"/home/loic/repositories/loispy/src/main.py",
		"/home/loic/repositories/loispy/src/parsing.py",
		"/home/loic/repositories/loispy/src/procedure.py",
		"/home/loic/repositories/loispy/src/loispylib/__init__.py",
		"/home/loic/repositories/loispy/src/loispylib/debug.py",
		"/home/loic/repositories/loispy/src/loispylib/procedure.py",
		"/home/loic/repositories/loispy/src/loispylib/analysis.py",
		"/home/loic/repositories/loispy/src/loispylib/main.py",
		"/home/loic/repositories/loispy/src/loispylib/utils.py",
		"/home/loic/repositories/loispy/src/loispylib/environment.py",
		"/home/loic/repositories/loispy/src/loispylib/parsing.py",
		"/home/loic/repositories/loispy/README.md",
		"/home/loic/repositories/loispy/bin/loispy",
		"/home/loic/repositories/loispy/src/test/test_parsing.py",
		"/home/loic/repositories/loispy/LICENSE.txt",
		"/home/loic/repositories/loispy/src/loispylib/test/__init__.py",
		"/home/loic/repositories/loispy/bin/losipy",
		"/home/loic/repositories/loispy/src/loispylib/repl.py",
		"/home/loic/repositories/loispy/src/loispylib/test/test_parsing.py",
		"/home/loic/repositories/cscheme/cscheme.c",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/02__parsing.litcoffee",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/04__primitives.litcoffee",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/05__the_environment_model.litcoffee",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/test.py",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/06__repl.litcoffee",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/03__syntactic_analysis.litcoffee",
		"/home/loic/Dropbox/Loic/Schoffee/build/js/schoffee.js",
		"/home/loic/Dropbox/Loic/Schoffee/coffee/01__introduction.litcoffee",
		"/home/loic/repositories/sicp/interpreter.coffee",
		"/home/loic/Dropbox/Loic/Schoffee/Cakefile",
		"/home/loic/Dropbox/Loic/Schoffee/Schoffee.sublime-project",
		"/Users/loic/Dropbox/Loic/Trio_website/bootstrap.min.js",
		"/Users/loic/Dropbox/Loic/Trio_website/kube.css",
		"/Users/loic/Dropbox/Loic/Trio_website/index.html",
		"/Users/loic/Dropbox/Loic/test_booleano/app.py",
		"/Users/loic/Dropbox/Loic/test_booleano/templates/index.html",
		"/Users/loic/Dropbox/Loic/test_booleano/QueryManager.py",
		"/Users/loic/Dropbox/Loic/formsapp/formserve.py",
		"/Users/loic/Dropbox/Loic/formsapp/LexicalFieldManager.py",
		"/Users/loic/Library/Application Support/Sublime Text 2/Packages/User/Default (OSX).sublime-keymap",
		"/Users/loic/repositories/phantombuyer/NavigationController.js",
		"/Users/loic/repositories/phantombuyer/OrderHandler.js",
		"/Users/loic/repositories/phantombuyer/phantombuyer.js",
		"/Users/loic/repositories/phantombuyer/amazon-selectors.js",
		"/Users/loic/repositories/Purr/purr/main.py",
		"/Users/loic/repositories/Purr/purr/core/__init__.py",
		"/Users/loic/repositories/phantombuyer/jquery-1.8.3.min.js",
		"/Users/loic/Dropbox/T3L 2011-2012/Mémoire/tex/redacted.tex",
		"/Users/loic/repositories/my-website/src/static/app.py",
		"/Users/loic/repositories/Purr/purr/core/processing/__init__.py",
		"/Users/loic/repositories/Purr/purr/core/preprocessing.py",
		"/Users/loic/repositories/Purr/purr/purr_logger.py",
		"/Users/loic/repositories/Purr/purr/purr.log",
		"/Users/loic/repositories/Purr/purr/logging.py",
		"/Users/loic/repositories/Purr/purr/__init__.py",
		"/Users/loic/repositories/Purr/purr/logging/__init__.py",
		"/Users/loic/repositories/Purr/purr/core/matching/__init__.py",
		"/Users/loic/repositories/Purr/purr/gui/__init__.py",
		"/Users/loic/repositories/Purr/bin/purr",
		"/Users/loic/repositories/Purr/Purr.sublime-project",
		"/Users/loic/repositories/Purr/purr/gui/PurrMainWindow.py",
		"/home/loic/repositories/Purr/purr/core/matching/levenshtein.py",
		"/home/loic/repositories/Purr/purr/logging/logger.py",
		"/home/loic/Purr/purr/exception/__init__.py",
		"/home/loic/Purr/purr/logging/__init__.py",
		"/home/loic/Purr/purr/core/matching/levenshtein",
		"/home/loic/Purr/purr/core/matching/__init__.py",
		"/home/loic/Purr/purr/core/__init__.py",
		"/home/loic/Purr/.gitignore",
		"/home/loic/Dropbox/Loic/Purr/app.py",
		"/home/loic/Dropbox/Loic/Purr/static/css/translationview.css",
		"/home/loic/Dropbox/Loic/Purr/templates/main.html",
		"/Users/loic/python/Purr/static/css/kube.css",
		"/Users/loic/python/Purr/static/grapher.js",
		"/Users/loic/python/graph/templates/main.html",
		"/Users/loic/python/graph/app.py",
		"/Users/loic/Dropbox/T3L 2011-2012/Mémoire/soutenance.txt",
		"/Users/loic/Dropbox/T3L 2011-2012/python/mytest.py",
		"/Users/loic/Documents/testquito/marco.html",
		"/Users/loic/Documents/testquito/marco_files/style.css",
		"/Users/loic/Dropbox/T3L 2011-2012/java/untitled.java",
		"/Users/loic/Dropbox/T3L 2011-2012/java/PhraseOMatic.java",
		"/Volumes/MUSIC/Uni Backups/T3L 2010-2011/TA_TAO/THE_UNIVERSAL_DECLARATION_OF_HUMAN_RIGHTS_GUYCHARD.tmx",
		"/Users/loic/Dropbox/T3L 2011-2012/python/ex42.py",
		"/Users/loic/Dropbox/T3L 2011-2012/python/testargv",
		"/Users/loic/Documents/dev/html/style.css",
		"/Users/loic/Documents/workspace/playingWithClasses/untitled.tex",
		"/Users/loic/Dropbox/T3L 2011-2012/python/printMyName.py",
		"/Users/loic/Dropbox/T3L 2011-2012/java/beersong.java"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/loic/repositories/loispy/src/loispy/interpreter"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"eval",
			"d",
			"analyze_let",
			"d",
			"error",
			"from error",
			"\n",
			"\"",
			"getter",
			"expand_cond",
			"is_cond",
			"macro_expand",
			"proc?",
			"proc",
			"true",
			"lambda",
			"procdef",
			"lambda\"",
			"lambda",
			"get",
			"dict_literal",
			"_expand",
			"atom",
			"return  ",
			"#     \"(.+)\": lambda (.*):(.*),",
			"class (\\w+)\\(NativeProcedure\\):\\n    def __call__(\\(.*\\)): (.*)",
			"NativeProc",
			"cond",
			"cond-actions",
			"expand_clauses",
			"cond",
			"analyze_if",
			"if",
			"cond",
			"env",
			"\n        ",
			"find",
			"neq",
			"Environment.prototype",
			"        console\\.log.*arguments\\n",
			"\\W(\\w+)\\s?= (\\((\\w+\\s?,?)+\\)\\s?->)(\\n        |\\s)",
			" is_definition = (exp) -> ",
			"\\W(\\w+)\\s?= (\\((\\w+\\s?,?)+\\)\\s?->)(\\n        |\\s)",
			"arguments",
			"\\W(\\w+)\\s?= (\\((\\w+\\s?,?)+\\)\\s?->)(\\n        |\\s)",
			".apply(",
			".apply",
			"extend",
			"new Env",
			"make_procedure",
			"analyze_definition",
			"analyze_defintion",
			"is_primitive",
			"outer",
			"apply_primitive",
			"procedure_parameters",
			"is_application",
			"is_pair",
			"is_application",
			"procedure",
			"is_pair",
			"is_application",
			"symbol",
			"is_pair",
			"false",
			"tru",
			"true",
			"true?",
			"self",
			"bootstrap",
			"tabbable",
			"\\s+=",
			"\\t",
			"));\n",
			"red",
			"base",
			"'',\n",
			"body",
			"mo:singer",
			"opéra bastille",
			"config",
			"35",
			"cross-cultura",
			"g",
			"enriching ontologies",
			"KWDataList",
			"KWDataItem",
			"searchforma",
			"mustbeat",
			"animated",
			"dc:title",
			"releasetype",
			"dc:title",
			"morceau",
			"dc:title",
			"&",
			"&quot;",
			"ISRC",
			"mo:isrc",
			"\"?>",
			"br",
			"http",
			"deprecated",
			"téléchargement",
			"</td>",
			"<td>",
			"h4",
			"release_of",
			"type"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"'",
			"return ",
			"@natproc\\ndef \\1(\\2):\\n    return \\3\\n",
			"@natproc\\ndef \\1(\\2):\\n    return \\3",
			"@natproc\\ndef \\1(\\2):\\n    \\3",
			"@natproc\\ndef \\1\\2:\\n    \\3",
			"@natproc\\n\\1\\2:\\n    \\3",
			"NativeProcedure",
			"this",
			"",
			" \\1 = \\2\\n        console.log \"\\1\", arguments\\n        ",
			" \\1 = \\2\\n        console.log \"\\1\", arguments\\n         ",
			" \\1 = \\2\\n        console.log \"\\1\", \"\\2\"\\n         ",
			" \\1 = \\2\\n        console.log \"\\1\" + \"\\2\"\\n         ",
			" \\1 = \\2\\n        console.log \\1 + \\2\\n         ",
			" =",
			" ",
			"    ",
			"\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "LICENSE.txt",
					"settings":
					{
						"buffer_size": 1079,
						"regions":
						{
						},
						"selection":
						[
							[
								55,
								55
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "README.md",
					"settings":
					{
						"buffer_size": 3170,
						"regions":
						{
						},
						"selection":
						[
							[
								3144,
								3144
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 349.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/loispy/interpreter/main.py",
					"settings":
					{
						"buffer_size": 2031,
						"regions":
						{
						},
						"selection":
						[
							[
								1731,
								1731
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 765.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/loispy/interpreter/builtin.py",
					"settings":
					{
						"buffer_size": 6054,
						"regions":
						{
						},
						"selection":
						[
							[
								3184,
								3186
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/loispy/interpreter/analysis.py",
					"settings":
					{
						"buffer_size": 12831,
						"regions":
						{
						},
						"selection":
						[
							[
								10619,
								10619
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 325.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/loispy/interpreter/tests/test.loisp",
					"settings":
					{
						"buffer_size": 352,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "src/loispy/interpreter/stdlib/compile.loisp",
					"settings":
					{
						"buffer_size": 1817,
						"regions":
						{
						},
						"selection":
						[
							[
								1346,
								1346
							]
						],
						"settings":
						{
							"syntax": "Packages/Lisp/Lisp.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.444159613715,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 197.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"analy",
				"src/loispy/interpreter/analysis.py"
			],
			[
				"error",
				"src/loispy/interpreter/error.py"
			],
			[
				"parsing",
				"src/loispy/interpreter/parsing.py"
			],
			[
				"en",
				"src/environment.py"
			],
			[
				"main",
				"src/main.py"
			],
			[
				"buil",
				"src/stdlib/builtinmacros.loisp"
			],
			[
				"proce",
				"src/procedure.py"
			],
			[
				"err",
				"src/error.py"
			],
			[
				"code",
				"src/codeobject.py"
			],
			[
				"built",
				"src/builtin.py"
			],
			[
				"utils",
				"src/utils.py"
			],
			[
				"anal",
				"src/analysis.py"
			],
			[
				"prmitive",
				"coffee/04__primitives.litcoffee"
			],
			[
				"",
				"/Users/loic/Dropbox/T3L 2011-2012/Mémoire/tex/biblio.bib"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 192.0,
	"status_bar_visible": true
}
